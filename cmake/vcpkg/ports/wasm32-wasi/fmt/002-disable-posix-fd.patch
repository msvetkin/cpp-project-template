diff --git a/src/os.cc b/src/os.cc
index 7813c433..b472f0a6 100644
--- a/src/os.cc
+++ b/src/os.cc
@@ -279,7 +279,7 @@ std::size_t file::write(const void* buffer, std::size_t count) {
 file file::dup(int fd) {
   // Don't retry as dup doesn't return EINTR.
   // http://pubs.opengroup.org/onlinepubs/009695399/functions/dup.html
-  int new_fd = FMT_POSIX_CALL(dup(fd));
+  int new_fd = -1;
   if (new_fd == -1)
     FMT_THROW(system_error(
         errno, FMT_STRING("cannot duplicate file descriptor {}"), fd));
@@ -287,8 +287,7 @@ file file::dup(int fd) {
 }
 
 void file::dup2(int fd) {
-  int result = 0;
-  FMT_RETRY(result, FMT_POSIX_CALL(dup2(fd_, fd)));
+  int result = -1;
   if (result == -1) {
     FMT_THROW(system_error(
         errno, FMT_STRING("cannot duplicate file descriptor {} to {}"), fd_,
@@ -297,8 +296,7 @@ void file::dup2(int fd) {
 }
 
 void file::dup2(int fd, std::error_code& ec) noexcept {
-  int result = 0;
-  FMT_RETRY(result, FMT_POSIX_CALL(dup2(fd_, fd)));
+  int result = -1;
   if (result == -1) ec = std::error_code(errno, std::generic_category());
 }
 
@@ -335,11 +333,11 @@ pipe::pipe() {
 #  ifdef _WIN32
   // Make the default pipe capacity same as on Linux 2.6.11+.
   enum { DEFAULT_CAPACITY = 65536 };
-  int result = FMT_POSIX_CALL(pipe(fds, DEFAULT_CAPACITY, _O_BINARY));
+  int result = -1;
 #  else
   // Don't retry as the pipe function doesn't return EINTR.
   // http://pubs.opengroup.org/onlinepubs/009696799/functions/pipe.html
-  int result = FMT_POSIX_CALL(pipe(fds));
+  int result = -1;
 #  endif
   if (result != 0)
     FMT_THROW(system_error(errno, FMT_STRING("cannot create pipe")));
